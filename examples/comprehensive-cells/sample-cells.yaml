# Comprehensive Sample Cells for Prism Platform
# This demonstrates 7 cell types with proper monitoring and metrics

---
# Channel Cell - API Gateway and External Communication
apiVersion: v1
kind: Namespace
metadata:
  name: channel-cell
  labels:
    prism.io/cell-type: channel
    prism.io/monitoring: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: channel-cell
  labels:
    prism.io/cell-type: channel
    prism.io/component: gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        prism.io/cell-type: channel
        prism.io/component: gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api-gateway
        image: nginx:alpine
        ports:
        - containerPort: 8080
        - containerPort: 80
        command: ["/bin/sh"]
        args:
          - -c
          - |
            mkdir -p /usr/share/nginx/html
            cat > /usr/share/nginx/html/metrics << 'EOF'
            # HELP prism_channel_requests_total Total API requests
            # TYPE prism_channel_requests_total counter
            prism_channel_requests_total{cell="channel",endpoint="/api/v1"} 245
            # HELP prism_channel_response_time_seconds API response time
            # TYPE prism_channel_response_time_seconds histogram
            prism_channel_response_time_seconds_bucket{cell="channel",le="0.1"} 180
            prism_channel_response_time_seconds_bucket{cell="channel",le="0.5"} 230
            prism_channel_response_time_seconds_bucket{cell="channel",le="1.0"} 240
            prism_channel_response_time_seconds_bucket{cell="channel",le="+Inf"} 245
            prism_channel_response_time_seconds_sum{cell="channel"} 45.2
            prism_channel_response_time_seconds_count{cell="channel"} 245
            # HELP prism_channel_connections_active Active connections
            # TYPE prism_channel_connections_active gauge
            prism_channel_connections_active{cell="channel"} 42
            EOF
            sed -i 's/listen       80;/listen       80;\n    listen       8080;/' /etc/nginx/conf.d/default.conf
            nginx -g 'daemon off;'
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: channel-cell
  labels:
    prism.io/cell-type: channel
    prism.io/monitoring: enabled
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: api-gateway
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: metrics
    port: 8080
    targetPort: 8080

---
# Logic Cell - Business Logic Processing
apiVersion: v1
kind: Namespace
metadata:
  name: logic-cell
  labels:
    prism.io/cell-type: logic
    prism.io/monitoring: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: business-logic
  namespace: logic-cell
  labels:
    prism.io/cell-type: logic
    prism.io/component: processor
spec:
  replicas: 3
  selector:
    matchLabels:
      app: business-logic
  template:
    metadata:
      labels:
        app: business-logic
        prism.io/cell-type: logic
        prism.io/component: processor
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: business-logic
        image: nginx:alpine
        ports:
        - containerPort: 8080
        - containerPort: 80
        command: ["/bin/sh"]
        args:
          - -c
          - |
            mkdir -p /usr/share/nginx/html
            cat > /usr/share/nginx/html/metrics << 'EOF'
            # HELP prism_logic_tasks_processed_total Total tasks processed
            # TYPE prism_logic_tasks_processed_total counter
            prism_logic_tasks_processed_total{cell="logic",type="calculation"} 1567
            # HELP prism_logic_processing_duration_seconds Task processing duration
            # TYPE prism_logic_processing_duration_seconds histogram
            prism_logic_processing_duration_seconds_bucket{cell="logic",le="0.1"} 800
            prism_logic_processing_duration_seconds_bucket{cell="logic",le="0.5"} 1400
            prism_logic_processing_duration_seconds_bucket{cell="logic",le="1.0"} 1550
            prism_logic_processing_duration_seconds_bucket{cell="logic",le="+Inf"} 1567
            prism_logic_processing_duration_seconds_sum{cell="logic"} 456.7
            prism_logic_processing_duration_seconds_count{cell="logic"} 1567
            # HELP prism_logic_queue_size Current queue size
            # TYPE prism_logic_queue_size gauge
            prism_logic_queue_size{cell="logic"} 23
            EOF
            sed -i 's/listen       80;/listen       80;\n    listen       8080;/' /etc/nginx/conf.d/default.conf
            nginx -g 'daemon off;'
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: business-logic
  namespace: logic-cell
  labels:
    prism.io/cell-type: logic
    prism.io/monitoring: enabled
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: business-logic
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: metrics
    port: 8080
    targetPort: 8080

---
# Security Cell - Security and Compliance
apiVersion: v1
kind: Namespace
metadata:
  name: security-cell
  labels:
    prism.io/cell-type: security
    prism.io/monitoring: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: security-scanner
  namespace: security-cell
  labels:
    prism.io/cell-type: security
    prism.io/component: scanner
spec:
  replicas: 2
  selector:
    matchLabels:
      app: security-scanner
  template:
    metadata:
      labels:
        app: security-scanner
        prism.io/cell-type: security
        prism.io/component: scanner
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: security-scanner
        image: nginx:alpine
        ports:
        - containerPort: 8080
        - containerPort: 80
        command: ["/bin/sh"]
        args:
          - -c
          - |
            mkdir -p /usr/share/nginx/html
            cat > /usr/share/nginx/html/metrics << 'EOF'
            # HELP prism_security_scans_total Total security scans
            # TYPE prism_security_scans_total counter
            prism_security_scans_total{cell="security",type="vulnerability"} 89
            # HELP prism_security_threats_detected_total Threats detected
            # TYPE prism_security_threats_detected_total counter
            prism_security_threats_detected_total{cell="security",severity="high"} 3
            prism_security_threats_detected_total{cell="security",severity="medium"} 12
            prism_security_threats_detected_total{cell="security",severity="low"} 27
            # HELP prism_security_compliance_score Compliance score
            # TYPE prism_security_compliance_score gauge
            prism_security_compliance_score{cell="security",framework="cis"} 0.92
            # HELP prism_security_policy_violations_total Policy violations
            # TYPE prism_security_policy_violations_total counter
            prism_security_policy_violations_total{cell="security",policy="network"} 5
            EOF
            sed -i 's/listen       80;/listen       80;\n    listen       8080;/' /etc/nginx/conf.d/default.conf
            nginx -g 'daemon off;'
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: security-scanner
  namespace: security-cell
  labels:
    prism.io/cell-type: security
    prism.io/monitoring: enabled
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: security-scanner
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: metrics
    port: 8080
    targetPort: 8080

---
# External Cell - Third-party Integrations
apiVersion: v1
kind: Namespace
metadata:
  name: external-cell
  labels:
    prism.io/cell-type: external
    prism.io/monitoring: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: integration-hub
  namespace: external-cell
  labels:
    prism.io/cell-type: external
    prism.io/component: integration
spec:
  replicas: 2
  selector:
    matchLabels:
      app: integration-hub
  template:
    metadata:
      labels:
        app: integration-hub
        prism.io/cell-type: external
        prism.io/component: integration
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: integration-hub
        image: nginx:alpine
        ports:
        - containerPort: 8080
        - containerPort: 80
        command: ["/bin/sh"]
        args:
          - -c
          - |
            mkdir -p /usr/share/nginx/html
            cat > /usr/share/nginx/html/metrics << 'EOF'
            # HELP prism_external_api_calls_total Total external API calls
            # TYPE prism_external_api_calls_total counter
            prism_external_api_calls_total{cell="external",provider="aws"} 456
            prism_external_api_calls_total{cell="external",provider="stripe"} 123
            prism_external_api_calls_total{cell="external",provider="sendgrid"} 89
            # HELP prism_external_response_time_seconds External API response time
            # TYPE prism_external_response_time_seconds histogram
            prism_external_response_time_seconds_bucket{cell="external",le="0.5"} 400
            prism_external_response_time_seconds_bucket{cell="external",le="1.0"} 620
            prism_external_response_time_seconds_bucket{cell="external",le="2.0"} 660
            prism_external_response_time_seconds_bucket{cell="external",le="+Inf"} 668
            prism_external_response_time_seconds_sum{cell="external"} 987.3
            prism_external_response_time_seconds_count{cell="external"} 668
            # HELP prism_external_rate_limit_remaining Rate limit remaining
            # TYPE prism_external_rate_limit_remaining gauge
            prism_external_rate_limit_remaining{cell="external",provider="aws"} 8500
            EOF
            sed -i 's/listen       80;/listen       80;\n    listen       8080;/' /etc/nginx/conf.d/default.conf
            nginx -g 'daemon off;'
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: integration-hub
  namespace: external-cell
  labels:
    prism.io/cell-type: external
    prism.io/monitoring: enabled
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: integration-hub
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: metrics
    port: 8080
    targetPort: 8080

---
# Integration Cell - Workflow Orchestration
apiVersion: v1
kind: Namespace
metadata:
  name: integration-cell
  labels:
    prism.io/cell-type: integration
    prism.io/monitoring: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-engine
  namespace: integration-cell
  labels:
    prism.io/cell-type: integration
    prism.io/component: orchestrator
spec:
  replicas: 2
  selector:
    matchLabels:
      app: workflow-engine
  template:
    metadata:
      labels:
        app: workflow-engine
        prism.io/cell-type: integration
        prism.io/component: orchestrator
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: workflow-engine
        image: nginx:alpine
        ports:
        - containerPort: 8080
        - containerPort: 80
        command: ["/bin/sh"]
        args:
          - -c
          - |
            mkdir -p /usr/share/nginx/html
            cat > /usr/share/nginx/html/metrics << 'EOF'
            # HELP prism_integration_workflows_total Total workflows executed
            # TYPE prism_integration_workflows_total counter
            prism_integration_workflows_total{cell="integration",type="etl"} 234
            prism_integration_workflows_total{cell="integration",type="sync"} 567
            # HELP prism_integration_workflow_duration_seconds Workflow execution time
            # TYPE prism_integration_workflow_duration_seconds histogram
            prism_integration_workflow_duration_seconds_bucket{cell="integration",le="30"} 450
            prism_integration_workflow_duration_seconds_bucket{cell="integration",le="60"} 720
            prism_integration_workflow_duration_seconds_bucket{cell="integration",le="120"} 780
            prism_integration_workflow_duration_seconds_bucket{cell="integration",le="+Inf"} 801
            prism_integration_workflow_duration_seconds_sum{cell="integration"} 34567
            prism_integration_workflow_duration_seconds_count{cell="integration"} 801
            # HELP prism_integration_queue_depth Queue depth
            # TYPE prism_integration_queue_depth gauge
            prism_integration_queue_depth{cell="integration",queue="high_priority"} 5
            prism_integration_queue_depth{cell="integration",queue="normal"} 23
            EOF
            sed -i 's/listen       80;/listen       80;\n    listen       8080;/' /etc/nginx/conf.d/default.conf
            nginx -g 'daemon off;'
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: workflow-engine
  namespace: integration-cell
  labels:
    prism.io/cell-type: integration
    prism.io/monitoring: enabled
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: workflow-engine
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: metrics
    port: 8080
    targetPort: 8080

---
# Legacy Cell - Legacy System Integration
apiVersion: v1
kind: Namespace
metadata:
  name: legacy-cell
  labels:
    prism.io/cell-type: legacy
    prism.io/monitoring: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: legacy-adapter
  namespace: legacy-cell
  labels:
    prism.io/cell-type: legacy
    prism.io/component: adapter
spec:
  replicas: 2
  selector:
    matchLabels:
      app: legacy-adapter
  template:
    metadata:
      labels:
        app: legacy-adapter
        prism.io/cell-type: legacy
        prism.io/component: adapter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: legacy-adapter
        image: nginx:alpine
        ports:
        - containerPort: 8080
        - containerPort: 80
        command: ["/bin/sh"]
        args:
          - -c
          - |
            mkdir -p /usr/share/nginx/html
            cat > /usr/share/nginx/html/metrics << 'EOF'
            # HELP prism_legacy_transactions_total Total legacy transactions
            # TYPE prism_legacy_transactions_total counter
            prism_legacy_transactions_total{cell="legacy",system="mainframe"} 12456
            prism_legacy_transactions_total{cell="legacy",system="cobol_app"} 8934
            # HELP prism_legacy_response_time_seconds Legacy system response time
            # TYPE prism_legacy_response_time_seconds histogram
            prism_legacy_response_time_seconds_bucket{cell="legacy",le="2.0"} 15000
            prism_legacy_response_time_seconds_bucket{cell="legacy",le="5.0"} 20000
            prism_legacy_response_time_seconds_bucket{cell="legacy",le="10.0"} 21200
            prism_legacy_response_time_seconds_bucket{cell="legacy",le="+Inf"} 21390
            prism_legacy_response_time_seconds_sum{cell="legacy"} 67890
            prism_legacy_response_time_seconds_count{cell="legacy"} 21390
            # HELP prism_legacy_modernization_progress Modernization progress
            # TYPE prism_legacy_modernization_progress gauge
            prism_legacy_modernization_progress{cell="legacy",component="user_interface"} 0.65
            prism_legacy_modernization_progress{cell="legacy",component="api_layer"} 0.82
            prism_legacy_modernization_progress{cell="legacy",component="data_migration"} 0.34
            EOF
            sed -i 's/listen       80;/listen       80;\n    listen       8080;/' /etc/nginx/conf.d/default.conf
            nginx -g 'daemon off;'
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: legacy-adapter
  namespace: legacy-cell
  labels:
    prism.io/cell-type: legacy
    prism.io/monitoring: enabled
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: legacy-adapter
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: metrics
    port: 8080
    targetPort: 8080 