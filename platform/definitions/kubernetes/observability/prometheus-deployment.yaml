apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app":"prism-platform","cellType":"observability","component":"prometheus","managed-by":"crossplane"},"name":"prometheus","namespace":"observability-cell-xr5kg-namespace"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prism-platform","component":"prometheus"}},"template":{"metadata":{"labels":{"app":"prism-platform","component":"prometheus"}},"spec":{"containers":[{"args":["--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.path=/prometheus","--storage.tsdb.retention.time=15d","--web.console.libraries=/usr/share/prometheus/console_libraries","--web.console.templates=/usr/share/prometheus/consoles"],"image":"prom/prometheus:v2.36.2","name":"prometheus","ports":[{"containerPort":9090}],"resources":{"limits":{"cpu":"8","memory":"32Gi"},"requests":{"cpu":"4","memory":"8Gi"}},"volumeMounts":[{"mountPath":"/etc/prometheus/","name":"prometheus-config"},{"mountPath":"/prometheus","name":"prometheus-storage"}]}],"volumes":[{"configMap":{"name":"prometheus-config"},"name":"prometheus-config"},{"name":"prometheus-storage","persistentVolumeClaim":{"claimName":"observability-cell-xr5kg-storage"}}]}}}}'
  creationTimestamp: "2025-03-15T00:50:32Z"
  generation: 1
  labels:
    app: prism-platform
    cellType: observability
    component: prometheus
    managed-by: crossplane
  name: prometheus
  namespace: observability-cell-xr5kg-namespace
  resourceVersion: "120161"
  uid: 87b3d7b1-85a0-49b3-9775-ea2b16b7cab8
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prism-platform
      component: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prism-platform
        component: prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=15d
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        image: prom/prometheus:v2.36.2
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: "8"
            memory: 32Gi
          requests:
            cpu: "4"
            memory: 8Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/
          name: prometheus-config
        - mountPath: /prometheus
          name: prometheus-storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-config
        name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: observability-cell-xr5kg-storage
status:
  conditions:
  - lastTransitionTime: "2025-03-15T00:50:32Z"
    lastUpdateTime: "2025-03-15T00:50:32Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2025-03-15T01:00:33Z"
    lastUpdateTime: "2025-03-15T01:00:33Z"
    message: ReplicaSet "prometheus-6c68bd9cc" has timed out progressing.
    reason: ProgressDeadlineExceeded
    status: "False"
    type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
