apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-cost-exporter-config
  namespace: monitoring
  labels:
    app: aws-cost-exporter
    component: monitoring
data:
  config.yaml: |
    regions:
      - us-east-1
      - us-west-2
      - eu-west-1
    collection_interval: 3600  # seconds
    log_level: info
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-cost-exporter
  namespace: monitoring
  labels:
    app: aws-cost-exporter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-cost-exporter
  labels:
    app: aws-cost-exporter
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods", "services", "nodes"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aws-cost-exporter
  labels:
    app: aws-cost-exporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-cost-exporter
subjects:
  - kind: ServiceAccount
    name: aws-cost-exporter
    namespace: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-cost-exporter
  namespace: monitoring
  labels:
    app: aws-cost-exporter
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aws-cost-exporter
  template:
    metadata:
      labels:
        app: aws-cost-exporter
        component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9099"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: aws-cost-exporter
      containers:
        - name: aws-cost-exporter
          image: amazon/aws-cli:2.9.19
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              # Install required dependencies
              yum update -y
              yum install -y python3-pip git

              # Clone the repo to get the exporter script
              # In a production environment, you'd package this properly
              git clone https://github.com/your-org/prism-platform.git /tmp/prism-platform

              # Install Python dependencies
              pip3 install boto3 requests pyyaml

              # Run the cost exporter
              python3 /tmp/prism-platform/scripts/aws_cost_exporter.py \
                --regions ${AWS_REGIONS} \
                --environment ${ENVIRONMENT} \
                --port 9099 \
                --interval ${COLLECTION_INTERVAL}
          env:
            - name: AWS_REGIONS
              value: "us-east-1,us-west-2,eu-west-1"  # Override with your regions
            - name: ENVIRONMENT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: COLLECTION_INTERVAL
              value: "3600"
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            # AWS credentials should be provided via IAM roles for service accounts
            # or via external secret management
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - name: metrics
              containerPort: 9099
          livenessProbe:
            httpGet:
              path: /
              port: metrics
            initialDelaySeconds: 120
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 120
            periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: aws-cost-exporter
  namespace: monitoring
  labels:
    app: aws-cost-exporter
    component: monitoring
spec:
  type: ClusterIP
  ports:
    - port: 9099
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app: aws-cost-exporter
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: aws-cost-exporter
  namespace: monitoring
  labels:
    app: aws-cost-exporter
    release: prometheus
spec:
  selector:
    matchLabels:
      app: aws-cost-exporter
  endpoints:
    - port: metrics
      interval: 60s
      path: /metrics
  namespaceSelector:
    matchNames:
      - monitoring
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: aws-cost-exporter-alerts
  namespace: monitoring
  labels:
    app: aws-cost-exporter
    release: prometheus
spec:
  groups:
    - name: aws-cost-alerts
      rules:
        - alert: BudgetExceeded
          expr: sum(aws_cost_mtd) / sum(aws_budget_monthly) * 100 > 85
          for: 1h
          labels:
            severity: warning
          annotations:
            summary: "AWS Budget utilization above 85%"
            description: "AWS Budget utilization is at {{ $value }}% of the monthly budget"

        - alert: BudgetCriticallyExceeded
          expr: sum(aws_cost_mtd) / sum(aws_budget_monthly) * 100 > 100
          for: 10m
          labels:
            severity: critical
          annotations:
            summary: "AWS Budget has been exceeded"
            description: "AWS Budget utilization is at {{ $value }}% of the monthly budget"

        - alert: CostIncreaseFromPreviousMonth
          expr: aws_cost_trend_vs_previous > 20
          for: 1d
          labels:
            severity: warning
          annotations:
            summary: "AWS Cost increased by >20% from previous month"
            description: "AWS Cost in region {{ $labels.region }} increased by {{ $value }}% compared to previous month"
