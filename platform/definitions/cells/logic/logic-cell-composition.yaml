apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: logic-cell-composition
  labels:
    provider: multi-cloud
    cell-type: logic
    prism.io/version: v1.2
spec:
  compositeTypeRef:
    apiVersion: prism.io/v1alpha1
    kind: Cell
  writeConnectionSecretsToNamespace: crossplane-system
  patchSets:
  - name: common-labels
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.labels
  - name: resource-sizing
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.resources.cpu
      toFieldPath: spec.forProvider.manifest.spec.containers[0].resources.requests.cpu
    - type: FromCompositeFieldPath
      fromFieldPath: spec.resources.memory
      toFieldPath: spec.forProvider.manifest.spec.containers[0].resources.requests.memory
  resources:
    # Create namespace for logic cell
    - name: namespace
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: "logic-cell"
                labels:
                  prism.io/cell-type: logic
                  prism.io/managed-by: crossplane
                  istio-injection: enabled  # Service mesh ready
          providerConfigRef:
            name: kubernetes-provider
      patches:
        - type: PatchSet
          patchSetName: common-labels
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cellId
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-namespace"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cellId
          toFieldPath: spec.forProvider.manifest.metadata.labels["prism.io/cell-id"]

    # Create service account for workloads
    - name: service-account
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: logic-cell-sa
                labels:
                  prism.io/cell-type: logic
          providerConfigRef:
            name: kubernetes-provider
      patches:
        - type: PatchSet
          patchSetName: common-labels
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cellId
          toFieldPath: spec.forProvider.manifest.metadata.namespace
          transforms:
            - type: string
              string:
                fmt: "%s-namespace"

    # Create resource quota for logic cell
    - name: resource-quota
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: ResourceQuota
              metadata:
                name: logic-cell-quota
                labels:
                  prism.io/cell-type: logic
              spec:
                hard:
                  requests.cpu: "4"
                  requests.memory: "8Gi"
                  limits.cpu: "8"
                  limits.memory: "16Gi"
                  pods: "10"
          providerConfigRef:
            name: kubernetes-provider
      patches:
        - type: PatchSet
          patchSetName: common-labels
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cellId
          toFieldPath: spec.forProvider.manifest.metadata.namespace
          transforms:
            - type: string
              string:
                fmt: "%s-namespace"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resources.cpu
          toFieldPath: spec.forProvider.manifest.spec.hard["requests.cpu"]
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resources.memory
          toFieldPath: spec.forProvider.manifest.spec.hard["requests.memory"]

    # Create network policy for logic cell isolation
    - name: network-policy
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: networking.k8s.io/v1
              kind: NetworkPolicy
              metadata:
                name: logic-cell-policy
                labels:
                  prism.io/cell-type: logic
              spec:
                podSelector:
                  matchLabels:
                    prism.io/cell-type: logic
                policyTypes:
                - Ingress
                - Egress
                ingress:
                - from:
                  - namespaceSelector:
                      matchLabels:
                        prism.io/network-zone: trusted
                  - podSelector:
                      matchLabels:
                        prism.io/cell-type: channel  # Allow channel cells
                egress:
                - to:
                  - namespaceSelector:
                      matchLabels:
                        prism.io/cell-type: data     # Allow data cells
                - to:
                  - namespaceSelector:
                      matchLabels:
                        prism.io/cell-type: external # Allow external calls
          providerConfigRef:
            name: kubernetes-provider
      patches:
        - type: PatchSet
          patchSetName: common-labels
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cellId
          toFieldPath: spec.forProvider.manifest.metadata.namespace
          transforms:
            - type: string
              string:
                fmt: "%s-namespace"

    # Create ConfigMap for cell configuration
    - name: cell-config
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: logic-cell-config
                labels:
                  prism.io/cell-type: logic
              data:
                cell-type: "logic"
                workload-types: "computational,analytical,algorithmic"
                resource-profile: "cpu-intensive"
                scaling-behavior: "horizontal"
          providerConfigRef:
            name: kubernetes-provider
      patches:
        - type: PatchSet
          patchSetName: common-labels
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cellId
          toFieldPath: spec.forProvider.manifest.metadata.namespace
          transforms:
            - type: string
              string:
                fmt: "%s-namespace"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.cellId
          toFieldPath: spec.forProvider.manifest.data.cell-id 